generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PrintProducts {
  id                     Int     @id @default(autoincrement())
  slug                   String  @unique
  coverProductId         String? @map("cover_product_id")
  pageProductId          String  @map("pages_product_id")
  grayscalePageVariantId String  @map("grayscale_page_variant_id")
  coloredPageVariantId   String  @map("colored_page_variant_id")

  @@map("print_products")
}

model UploadedFile {
  id              Int           @id @default(autoincrement())
  hash            String        @unique @db.VarChar(32)
  extension       String        @db.VarChar(16)
  name            String        @db.VarChar(127)
  pageCount       Int?          @map("page_count")
  coloredPages    Json?         @map("colored_pages")
  created         DateTime?     @db.Timestamptz(6)
  description     String
  textAttributeId Int?          @map("text_attribute_id")
  baseUrl         String        @map("base_url") @db.VarChar(127)
  processStatus   ProcessStatus @default(NOT_PROCESSED) @map("process_status")

  @@map("uploaded_file")
}

enum ProcessStatus {
  DONE
  ERROR
  NOT_PROCESSED
}

model UploadedFileLine {
  id                  Int       @id @default(autoincrement())
  choosedColoredPages Json?     @map("choosed_colored_pages")
  duplex              Boolean?
  fileId              String?   @map("file_id") @db.VarChar(32)
  role                String    @db.VarChar(16)
  created             DateTime? @db.Timestamptz(6)
  hash                String?   @db.VarChar(32)
  copies              Int
  name                String?   @db.VarChar(127)
  checkoutId          String?   @map("checkout_id") @db.Uuid
  orderToken          String?   @map("order_token") @db.Uuid
  pagesPerSheet       Int?      @map("pages_per_sheet")
  coverId             String?   @map("cover_id") @db.VarChar(32)

  @@map("uploaded_file_line")
}
